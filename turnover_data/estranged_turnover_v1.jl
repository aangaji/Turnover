[
Dict( :Ncutoff => 200, :b => 1.0, :μ => 0.2,
      :turnover => [ 0.0, 0.01735, 0.01961, 0.04837, 0.05039, 0.07077, 0.09298, 0.09346, 0.13411, 0.17835, 0.1853, 0.2463, 0.25804, 0.31353, 0.36488, 0.49198, 0.65909, 0.81215, 0.96246, 1.0 ],
      :d => [ 0.0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95 ] ),

Dict( :Ncutoff => 200, :b => 1.0, :μ => 0.1,
      :turnover => [ 0.0, 0.00996, 0.02898, 0.0408, 0.05848, 0.06853, 0.05719, 0.09383, 0.0857, 0.10166, 0.16661, 0.15237, 0.18419, 0.20795, 0.25747, 0.27621, 0.37284, 0.4898, 0.70801, 0.94068 ],
      :d => [0.0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95 ] ),

Dict( :Ncutoff => 200, :b => 1.0, :μ => 0.05,
      :turnover => [ 0.0, 0.01388, 0.01875, 0.03064, 0.03808, 0.08116, 0.06626, 0.08427, 0.07467, 0.10206, 0.10804, 0.13951, 0.13696, 0.16227, 0.22127, 0.20623, 0.24748, 0.28126, 0.42716, 0.7429],
      :d => [ 0.0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95 ] ),
]
# q = d / (b*(1-μ))
